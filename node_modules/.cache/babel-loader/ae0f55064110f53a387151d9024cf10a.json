{"ast":null,"code":"var _jsxFileName = \"/home/dci/Documents/DCI/Class \\xFCbungen/React/tic-tac-toe-hook/src/Components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { calculateWinner } from '../Helpers';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardCopy = [...board]; //If user clicks an occupied square or if game is won, return\n\n    if (winner || boardCopy[i]) return; // Put an X or an O in thes clicked square\n\n    boardCopy[i] = xIsNext ? 'X' : 'O';\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const jumpTo = () => {};\n\n  const renderMoves = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Board, {\n    squares: board,\n    onClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"dabZUepayQsmpuxBy5xy8mA8mZs=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/dci/Documents/DCI/Class Ã¼bungen/React/tic-tac-toe-hook/src/Components/Game.js"],"names":["React","useState","calculateWinner","Board","Game","board","setBoard","Array","fill","xIsNext","setXisNext","winner","handleClick","i","boardCopy","jumpTo","renderMoves"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAjC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,MAAM,GAAGT,eAAe,CAACG,KAAD,CAA9B;;AAGA,QAAMO,WAAW,GAAIC,CAAD,IAAO;AACvB,UAAMC,SAAS,GAAG,CAAC,GAAGT,KAAJ,CAAlB,CADuB,CAEvB;;AACA,QAAIM,MAAM,IAAIG,SAAS,CAACD,CAAD,CAAvB,EAA4B,OAHL,CAIvB;;AACAC,IAAAA,SAAS,CAACD,CAAD,CAAT,GAAeJ,OAAO,GAAG,GAAH,GAAS,GAA/B;AACAH,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAEH,GATD;;AAWA,QAAMM,MAAM,GAAG,MAAM,CAGpB,CAHD;;AAKA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEX,KAAhB;AAAuB,IAAA,OAAO,EAAEO;AAAhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA9BD;;GAAMR,I;;KAAAA,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { calculateWinner } from '../Helpers';\nimport Board from './Board'\n\nconst Game = () => {\n    const[board, setBoard] = useState(Array(9).fill(null));\n\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(board);\n\n\n    const handleClick = (i) => {\n        const boardCopy = [...board];\n        //If user clicks an occupied square or if game is won, return\n        if (winner || boardCopy[i]) return;\n        // Put an X or an O in thes clicked square\n        boardCopy[i] = xIsNext ? 'X' : 'O';\n        setBoard(boardCopy);\n        setXisNext(!xIsNext);\n\n    }\n\n    const jumpTo = () => {\n\n\n    }\n\n    const renderMoves = () => {\n\n    }\n   \n    return(\n        <Board squares={board} onClick={handleClick} />\n    )\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}